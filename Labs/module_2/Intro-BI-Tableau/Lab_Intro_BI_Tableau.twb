<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.0801.1333                               -->
<workbook original-version='18.1' source-build='2020.3.0 (20203.20.0801.1333)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='liquor_store_sales (liquor_store_sales)' inline='true' name='federated.1vwb4yu058l4vv10b3ul00p9m0jg' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='liquor_store_sales' name='excel-direct.1p4igxw0pygohs14y2in80ohueso'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/marie/Documents/Ironhack/Week5/liquor_store_sales.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1p4igxw0pygohs14y2in80ohueso' name='liquor_store_sales' table='[liquor_store_sales$]' type='table'>
          <columns gridOrigin='A1:I10001:no:A1:I10001:0' header='yes' outcome='2'>
            <column datatype='string' name='Year' ordinal='0' />
            <column datatype='integer' name='Month' ordinal='1' />
            <column datatype='string' name='Supplier' ordinal='2' />
            <column datatype='integer' name='ItemCode' ordinal='3' />
            <column datatype='string' name='Description' ordinal='4' />
            <column datatype='string' name='ItemType' ordinal='5' />
            <column datatype='real' name='RetailSales' ordinal='6' />
            <column datatype='real' name='RetailTransfers' ordinal='7' />
            <column datatype='real' name='WarehouseSales' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1p4igxw0pygohs14y2in80ohueso' name='liquor_store_sales' table='[liquor_store_sales$]' type='table'>
          <columns gridOrigin='A1:I10001:no:A1:I2147483647:0' header='yes' outcome='2'>
            <column datatype='string' name='Year' ordinal='0' />
            <column datatype='integer' name='Month' ordinal='1' />
            <column datatype='string' name='Supplier' ordinal='2' />
            <column datatype='integer' name='ItemCode' ordinal='3' />
            <column datatype='string' name='Description' ordinal='4' />
            <column datatype='string' name='ItemType' ordinal='5' />
            <column datatype='real' name='RetailSales' ordinal='6' />
            <column datatype='real' name='RetailTransfers' ordinal='7' />
            <column datatype='real' name='WarehouseSales' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[liquor_store_sales]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[liquor_store_sales]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Supplier</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Supplier]</local-name>
            <parent-name>[liquor_store_sales]</parent-name>
            <remote-alias>Supplier</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ItemCode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ItemCode]</local-name>
            <parent-name>[liquor_store_sales]</parent-name>
            <remote-alias>ItemCode</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Description]</local-name>
            <parent-name>[liquor_store_sales]</parent-name>
            <remote-alias>Description</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ItemType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ItemType]</local-name>
            <parent-name>[liquor_store_sales]</parent-name>
            <remote-alias>ItemType</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RetailSales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[RetailSales]</local-name>
            <parent-name>[liquor_store_sales]</parent-name>
            <remote-alias>RetailSales</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RetailTransfers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[RetailTransfers]</local-name>
            <parent-name>[liquor_store_sales]</parent-name>
            <remote-alias>RetailTransfers</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WarehouseSales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[WarehouseSales]</local-name>
            <parent-name>[liquor_store_sales]</parent-name>
            <remote-alias>WarehouseSales</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[liquor_store_sales]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I10001:no:A1:I2147483647:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Item Code' datatype='integer' name='[ItemCode]' role='dimension' type='ordinal' />
      <column caption='Item Type' datatype='string' name='[ItemType]' role='dimension' type='nominal' />
      <column caption='Quarter' datatype='integer' name='[Month (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Month]' peg='0' size='4' />
        <aliases>
          <alias key='0' value='Q1' />
          <alias key='1' value='Q2' />
          <alias key='2' value='Q3' />
          <alias key='3' value='Q4' />
        </aliases>
      </column>
      <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
      <column caption='Retail Sales' datatype='real' name='[RetailSales]' role='measure' type='quantitative' />
      <column caption='Retail Transfers' datatype='real' name='[RetailTransfers]' role='measure' type='quantitative' />
      <column caption='Warehouse Sales' datatype='real' name='[WarehouseSales]' role='measure' type='quantitative' />
      <column datatype='string' name='[Year]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='liquor_store_sales' datatype='table' name='[__tableau_internal_object_id__].[liquor!store!sales_A33391668E20415BBF59D20BD0726410]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;France&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='liquor_store_sales' id='liquor!store!sales_A33391668E20415BBF59D20BD0726410'>
            <properties context=''>
              <relation connection='excel-direct.1p4igxw0pygohs14y2in80ohueso' name='liquor_store_sales' table='[liquor_store_sales$]' type='table'>
                <columns gridOrigin='A1:I10001:no:A1:I10001:0' header='yes' outcome='2'>
                  <column datatype='string' name='Year' ordinal='0' />
                  <column datatype='integer' name='Month' ordinal='1' />
                  <column datatype='string' name='Supplier' ordinal='2' />
                  <column datatype='integer' name='ItemCode' ordinal='3' />
                  <column datatype='string' name='Description' ordinal='4' />
                  <column datatype='string' name='ItemType' ordinal='5' />
                  <column datatype='real' name='RetailSales' ordinal='6' />
                  <column datatype='real' name='RetailTransfers' ordinal='7' />
                  <column datatype='real' name='WarehouseSales' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='liquor_store_sales (liquor_store_sales) (2)' inline='true' name='federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='liquor_store_sales' name='excel-direct.1p4igxw0pygohs14y2in80ohueso (copy)'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/marie/Documents/Ironhack/Week5/liquor_store_sales.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1p4igxw0pygohs14y2in80ohueso (copy)' name='liquor_store_sales' table='[liquor_store_sales$]' type='table'>
          <columns gridOrigin='A1:I10001:no:A1:I2147483647:0' header='yes' outcome='2'>
            <column datatype='string' name='Year' ordinal='0' />
            <column datatype='integer' name='Month' ordinal='1' />
            <column datatype='string' name='Supplier' ordinal='2' />
            <column datatype='integer' name='ItemCode' ordinal='3' />
            <column datatype='string' name='Description' ordinal='4' />
            <column datatype='string' name='ItemType' ordinal='5' />
            <column datatype='real' name='RetailSales' ordinal='6' />
            <column datatype='real' name='RetailTransfers' ordinal='7' />
            <column datatype='real' name='WarehouseSales' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1p4igxw0pygohs14y2in80ohueso (copy)' name='liquor_store_sales' table='[liquor_store_sales$]' type='table'>
          <columns gridOrigin='A1:I10001:no:A1:I2147483647:0' header='yes' outcome='2'>
            <column datatype='string' name='Year' ordinal='0' />
            <column datatype='integer' name='Month' ordinal='1' />
            <column datatype='string' name='Supplier' ordinal='2' />
            <column datatype='integer' name='ItemCode' ordinal='3' />
            <column datatype='string' name='Description' ordinal='4' />
            <column datatype='string' name='ItemType' ordinal='5' />
            <column datatype='real' name='RetailSales' ordinal='6' />
            <column datatype='real' name='RetailTransfers' ordinal='7' />
            <column datatype='real' name='WarehouseSales' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[liquor_store_sales]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I10001:no:A1:I2147483647:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[liquor_store_sales]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[liquor!store!sales_A33391668E20415BBF59D20BD0726410]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[liquor_store_sales]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[liquor!store!sales_A33391668E20415BBF59D20BD0726410]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Supplier</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Supplier]</local-name>
            <parent-name>[liquor_store_sales]</parent-name>
            <remote-alias>Supplier</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[liquor!store!sales_A33391668E20415BBF59D20BD0726410]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ItemCode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ItemCode]</local-name>
            <parent-name>[liquor_store_sales]</parent-name>
            <remote-alias>ItemCode</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[liquor!store!sales_A33391668E20415BBF59D20BD0726410]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Description]</local-name>
            <parent-name>[liquor_store_sales]</parent-name>
            <remote-alias>Description</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[liquor!store!sales_A33391668E20415BBF59D20BD0726410]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ItemType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ItemType]</local-name>
            <parent-name>[liquor_store_sales]</parent-name>
            <remote-alias>ItemType</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[liquor!store!sales_A33391668E20415BBF59D20BD0726410]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RetailSales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[RetailSales]</local-name>
            <parent-name>[liquor_store_sales]</parent-name>
            <remote-alias>RetailSales</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[liquor!store!sales_A33391668E20415BBF59D20BD0726410]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RetailTransfers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[RetailTransfers]</local-name>
            <parent-name>[liquor_store_sales]</parent-name>
            <remote-alias>RetailTransfers</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[liquor!store!sales_A33391668E20415BBF59D20BD0726410]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WarehouseSales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[WarehouseSales]</local-name>
            <parent-name>[liquor_store_sales]</parent-name>
            <remote-alias>WarehouseSales</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[liquor!store!sales_A33391668E20415BBF59D20BD0726410]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Item Code' datatype='integer' name='[ItemCode]' role='dimension' type='ordinal' />
      <column caption='Item Type' datatype='string' name='[ItemType]' role='dimension' type='nominal' />
      <column aggregation='None' caption='Quarter' datatype='integer' name='[Month (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Month]' peg='0' size='4' />
        <aliases>
          <alias key='0' value='Q1' />
          <alias key='1' value='Q2' />
          <alias key='2' value='Q3' />
          <alias key='3' value='Q4' />
        </aliases>
      </column>
      <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
      <column caption='Retail Sales' datatype='real' name='[RetailSales]' role='measure' type='quantitative' />
      <column caption='Retail Transfers' datatype='real' name='[RetailTransfers]' role='measure' type='quantitative' />
      <column caption='Warehouse Sales' datatype='real' name='[WarehouseSales]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='liquor_store_sales' datatype='table' name='[__tableau_internal_object_id__].[liquor!store!sales_A33391668E20415BBF59D20BD0726410]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;France&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='liquor_store_sales' id='liquor!store!sales_A33391668E20415BBF59D20BD0726410'>
            <properties context=''>
              <relation connection='excel-direct.1p4igxw0pygohs14y2in80ohueso (copy)' name='liquor_store_sales' table='[liquor_store_sales$]' type='table'>
                <columns gridOrigin='A1:I10001:no:A1:I2147483647:0' header='yes' outcome='2'>
                  <column datatype='string' name='Year' ordinal='0' />
                  <column datatype='integer' name='Month' ordinal='1' />
                  <column datatype='string' name='Supplier' ordinal='2' />
                  <column datatype='integer' name='ItemCode' ordinal='3' />
                  <column datatype='string' name='Description' ordinal='4' />
                  <column datatype='string' name='ItemType' ordinal='5' />
                  <column datatype='real' name='RetailSales' ordinal='6' />
                  <column datatype='real' name='RetailTransfers' ordinal='7' />
                  <column datatype='real' name='WarehouseSales' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='liquor_store_sales (liquor_store_sales)' name='federated.1vwb4yu058l4vv10b3ul00p9m0jg' />
          </datasources>
          <datasource-dependencies datasource='federated.1vwb4yu058l4vv10b3ul00p9m0jg'>
            <column caption='Quarter' datatype='integer' name='[Month (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Month]' peg='0' size='4' />
              <aliases>
                <alias key='0' value='Q1' />
                <alias key='1' value='Q2' />
                <alias key='2' value='Q3' />
                <alias key='3' value='Q4' />
              </aliases>
            </column>
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='liquor_store_sales' datatype='integer' name='[__tableau_internal_object_id__].[liquor!store!sales_A33391668E20415BBF59D20BD0726410]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[liquor!store!sales_A33391668E20415BBF59D20BD0726410]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:liquor!store!sales_A33391668E20415BBF59D20BD0726410:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='liquor_store_sales' datatype='table' name='[__tableau_internal_object_id__].[liquor!store!sales_A33391668E20415BBF59D20BD0726410]' role='measure' type='quantitative' />
            <column-instance column='[Month (bin)]' derivation='None' name='[none:Month (bin):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1vwb4yu058l4vv10b3ul00p9m0jg].[__tableau_internal_object_id__].[cnt:liquor!store!sales_A33391668E20415BBF59D20BD0726410:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vwb4yu058l4vv10b3ul00p9m0jg].[none:Month (bin):ok]</rows>
        <cols />
      </table>
      <simple-id uuid='{534751B4-3582-41F3-88B1-0FDAE19E1C1B}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='liquor_store_sales (liquor_store_sales)' name='federated.1vwb4yu058l4vv10b3ul00p9m0jg' />
          </datasources>
          <datasource-dependencies datasource='federated.1vwb4yu058l4vv10b3ul00p9m0jg'>
            <column caption='Quarter' datatype='integer' name='[Month (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Month]' peg='0' size='4' />
              <aliases>
                <alias key='0' value='Q1' />
                <alias key='1' value='Q2' />
                <alias key='2' value='Q3' />
                <alias key='3' value='Q4' />
              </aliases>
            </column>
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column caption='Retail Sales' datatype='real' name='[RetailSales]' role='measure' type='quantitative' />
            <column caption='Retail Transfers' datatype='real' name='[RetailTransfers]' role='measure' type='quantitative' />
            <column caption='Warehouse Sales' datatype='real' name='[WarehouseSales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='liquor_store_sales' datatype='integer' name='[__tableau_internal_object_id__].[liquor!store!sales_A33391668E20415BBF59D20BD0726410]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[liquor!store!sales_A33391668E20415BBF59D20BD0726410]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:liquor!store!sales_A33391668E20415BBF59D20BD0726410:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='liquor_store_sales' datatype='table' name='[__tableau_internal_object_id__].[liquor!store!sales_A33391668E20415BBF59D20BD0726410]' role='measure' type='quantitative' />
            <column-instance column='[RetailSales]' derivation='Avg' name='[avg:RetailSales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Month (bin)]' derivation='None' name='[none:Month (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[RetailSales]' derivation='Sum' name='[sum:RetailSales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RetailTransfers]' derivation='Sum' name='[sum:RetailTransfers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[WarehouseSales]' derivation='Sum' name='[sum:WarehouseSales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vwb4yu058l4vv10b3ul00p9m0jg].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vwb4yu058l4vv10b3ul00p9m0jg].[sum:RetailSales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vwb4yu058l4vv10b3ul00p9m0jg].[avg:RetailSales:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1vwb4yu058l4vv10b3ul00p9m0jg].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1vwb4yu058l4vv10b3ul00p9m0jg].[__tableau_internal_object_id__].[cnt:liquor!store!sales_A33391668E20415BBF59D20BD0726410:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vwb4yu058l4vv10b3ul00p9m0jg].[sum:RetailSales:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vwb4yu058l4vv10b3ul00p9m0jg].[avg:RetailSales:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vwb4yu058l4vv10b3ul00p9m0jg].[sum:RetailTransfers:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vwb4yu058l4vv10b3ul00p9m0jg].[sum:WarehouseSales:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1vwb4yu058l4vv10b3ul00p9m0jg].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1vwb4yu058l4vv10b3ul00p9m0jg].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1vwb4yu058l4vv10b3ul00p9m0jg].[none:Year:nk] / ([federated.1vwb4yu058l4vv10b3ul00p9m0jg].[none:Month (bin):ok] / [federated.1vwb4yu058l4vv10b3ul00p9m0jg].[:Measure Names]))</rows>
        <cols />
      </table>
      <simple-id uuid='{33D86F9F-E8E2-40F6-A55A-1DC4DEE03BC7}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='liquor_store_sales (liquor_store_sales)' name='federated.1vwb4yu058l4vv10b3ul00p9m0jg' />
          </datasources>
          <datasource-dependencies datasource='federated.1vwb4yu058l4vv10b3ul00p9m0jg'>
            <column caption='Item Type' datatype='string' name='[ItemType]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column caption='Retail Sales' datatype='real' name='[RetailSales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[RetailSales]' derivation='Avg' name='[avg:RetailSales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ItemType]' derivation='None' name='[none:ItemType:nk]' pivot='key' type='nominal' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[RetailSales]' derivation='Sum' name='[sum:RetailSales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vwb4yu058l4vv10b3ul00p9m0jg].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vwb4yu058l4vv10b3ul00p9m0jg].[sum:RetailSales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vwb4yu058l4vv10b3ul00p9m0jg].[avg:RetailSales:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1vwb4yu058l4vv10b3ul00p9m0jg].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1vwb4yu058l4vv10b3ul00p9m0jg].[sum:RetailSales:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vwb4yu058l4vv10b3ul00p9m0jg].[avg:RetailSales:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1vwb4yu058l4vv10b3ul00p9m0jg].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1vwb4yu058l4vv10b3ul00p9m0jg].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1vwb4yu058l4vv10b3ul00p9m0jg].[none:Year:nk] / ([federated.1vwb4yu058l4vv10b3ul00p9m0jg].[none:Month:ok] / [federated.1vwb4yu058l4vv10b3ul00p9m0jg].[:Measure Names]))</rows>
        <cols>[federated.1vwb4yu058l4vv10b3ul00p9m0jg].[none:ItemType:nk]</cols>
      </table>
      <simple-id uuid='{E797E6A3-B26D-4A9C-BBB2-F5D687AE9E2B}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='liquor_store_sales (liquor_store_sales) (2)' name='federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)'>
            <column aggregation='None' caption='Quarter' datatype='integer' name='[Month (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Month]' peg='0' size='4' />
              <aliases>
                <alias key='0' value='Q1' />
                <alias key='1' value='Q2' />
                <alias key='2' value='Q3' />
                <alias key='3' value='Q4' />
              </aliases>
            </column>
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column caption='Retail Transfers' datatype='real' name='[RetailTransfers]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[RetailTransfers]' derivation='Avg' name='[avg:RetailTransfers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Month (bin)]' derivation='None' name='[none:Month (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[RetailTransfers]' derivation='Sum' name='[sum:RetailTransfers:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[sum:RetailTransfers:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[avg:RetailTransfers:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[sum:RetailTransfers:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[avg:RetailTransfers:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[none:Year:nk] / ([federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[none:Month (bin):ok] / [federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[:Measure Names]))</rows>
        <cols />
      </table>
      <simple-id uuid='{4987FD83-DDF3-4292-BB6D-F83509301D28}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='liquor_store_sales (liquor_store_sales) (2)' name='federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)'>
            <column caption='Item Type' datatype='string' name='[ItemType]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column caption='Retail Transfers' datatype='real' name='[RetailTransfers]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[RetailTransfers]' derivation='Avg' name='[avg:RetailTransfers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ItemType]' derivation='None' name='[none:ItemType:nk]' pivot='key' type='nominal' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[RetailTransfers]' derivation='Sum' name='[sum:RetailTransfers:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[sum:RetailTransfers:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[avg:RetailTransfers:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[sum:RetailTransfers:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[avg:RetailTransfers:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[none:Year:nk] / ([federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[none:Month:ok] / [federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[:Measure Names]))</rows>
        <cols>[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[none:ItemType:nk]</cols>
      </table>
      <simple-id uuid='{F48927C6-8351-40BA-9BD0-BE919A25067B}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='liquor_store_sales (liquor_store_sales) (2)' name='federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)'>
            <column aggregation='None' caption='Quarter' datatype='integer' name='[Month (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Month]' peg='0' size='4' />
              <aliases>
                <alias key='0' value='Q1' />
                <alias key='1' value='Q2' />
                <alias key='2' value='Q3' />
                <alias key='3' value='Q4' />
              </aliases>
            </column>
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column caption='Warehouse Sales' datatype='real' name='[WarehouseSales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[WarehouseSales]' derivation='Avg' name='[avg:WarehouseSales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Month (bin)]' derivation='None' name='[none:Month (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[WarehouseSales]' derivation='Sum' name='[sum:WarehouseSales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[sum:WarehouseSales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[avg:WarehouseSales:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[sum:WarehouseSales:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[avg:WarehouseSales:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[none:Year:nk] / ([federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[none:Month (bin):ok] / [federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[:Measure Names]))</rows>
        <cols />
      </table>
      <simple-id uuid='{31323077-4B51-4A17-B4EC-2DB06DC76149}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='liquor_store_sales (liquor_store_sales) (2)' name='federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)'>
            <column caption='Item Type' datatype='string' name='[ItemType]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column caption='Warehouse Sales' datatype='real' name='[WarehouseSales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[WarehouseSales]' derivation='Avg' name='[avg:WarehouseSales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ItemType]' derivation='None' name='[none:ItemType:nk]' pivot='key' type='nominal' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[WarehouseSales]' derivation='Sum' name='[sum:WarehouseSales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[sum:WarehouseSales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[avg:WarehouseSales:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[sum:WarehouseSales:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[avg:WarehouseSales:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[none:Year:nk] / ([federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[none:Month:ok] / [federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[:Measure Names]))</rows>
        <cols>[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[none:ItemType:nk]</cols>
      </table>
      <simple-id uuid='{4EF3E4F6-29C1-4FC6-B0A1-CB8330E30504}' />
    </worksheet>
  </worksheets>
  <windows source-height='51'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vwb4yu058l4vv10b3ul00p9m0jg].[none:Month (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0E673D83-75C3-41C9-8DF1-F230337879F7}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vwb4yu058l4vv10b3ul00p9m0jg].[:Measure Names]</field>
            <field>[federated.1vwb4yu058l4vv10b3ul00p9m0jg].[none:Month (bin):ok]</field>
            <field>[federated.1vwb4yu058l4vv10b3ul00p9m0jg].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{840DD069-9F54-4C75-9A55-212E3C8E71D9}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vwb4yu058l4vv10b3ul00p9m0jg].[:Measure Names]</field>
            <field>[federated.1vwb4yu058l4vv10b3ul00p9m0jg].[none:ItemType:nk]</field>
            <field>[federated.1vwb4yu058l4vv10b3ul00p9m0jg].[none:Month:qk]</field>
            <field>[federated.1vwb4yu058l4vv10b3ul00p9m0jg].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A4FA14D6-3E3C-4359-BE21-92BE944AAC9E}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[:Measure Names]</field>
            <field>[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[none:Month (bin):ok]</field>
            <field>[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4266BFBE-656E-48C6-8142-7EE6C560F009}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[:Measure Names]</field>
            <field>[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[none:ItemType:nk]</field>
            <field>[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[none:Month:qk]</field>
            <field>[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EA9A6506-433E-4CB0-8A93-A31F4BFBF76D}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[:Measure Names]</field>
            <field>[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[none:Month (bin):ok]</field>
            <field>[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7FF68500-B0E3-46B9-82A6-D8FFFBB1823D}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[:Measure Names]</field>
            <field>[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[none:ItemType:nk]</field>
            <field>[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[none:Month:qk]</field>
            <field>[federated.1vwb4yu058l4vv10b3ul00p9m0jg (copy)].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C4A7D6B6-A4F2-44C1-84C8-0AD228796CBD}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='104' name='Sheet 1' width='144'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='184' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='184' name='Sheet 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
    </thumbnail>
    <thumbnail height='184' name='Sheet 6' width='192'>
      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
      paDWAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
